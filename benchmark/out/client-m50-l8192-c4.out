[INFO] Scanning for projects...
[INFO] 
[INFO] ----------------------< com.vlkan:reactor-pubsub >----------------------
[INFO] Building Reactive Google Cloud Pub/Sub driver with Reactor 0.1.3-SNAPSHOT
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- exec-maven-plugin:1.6.0:java (default-cli) @ reactor-pubsub ---
23:07:55.816 [com.vlkan.pubsub.BenchmarkClient.main()] INFO  com.vlkan.pubsub.BenchmarkClient - baseUrl = http://localhost:7777
23:07:55.819 [com.vlkan.pubsub.BenchmarkClient.main()] INFO  com.vlkan.pubsub.BenchmarkClient - concurrency = 4
23:07:55.819 [com.vlkan.pubsub.BenchmarkClient.main()] INFO  com.vlkan.pubsub.BenchmarkClient - pullCount = 2000
23:07:55.819 [com.vlkan.pubsub.BenchmarkClient.main()] INFO  com.vlkan.pubsub.BenchmarkClient - warmUpPeriodSeconds = 30
23:07:56.431 [com.vlkan.pubsub.BenchmarkClient.main()] INFO  com.vlkan.pubsub.BenchmarkClient - [warm-up] started
23:08:26.440 [parallel-1] WARN  io.netty.util.ReferenceCountUtil - Failed to release a message: CompositeByteBuf(freed, components=1)
io.netty.util.IllegalReferenceCountException: refCnt: 0, decrement: 1
	at io.netty.util.internal.ReferenceCountUpdater.toLiveRealRefCnt(ReferenceCountUpdater.java:74) ~[netty-common-4.1.44.Final.jar:4.1.44.Final]
	at io.netty.util.internal.ReferenceCountUpdater.release(ReferenceCountUpdater.java:138) ~[netty-common-4.1.44.Final.jar:4.1.44.Final]
	at io.netty.buffer.AbstractReferenceCountedByteBuf.release(AbstractReferenceCountedByteBuf.java:100) ~[netty-buffer-4.1.44.Final.jar:4.1.44.Final]
	at io.netty.buffer.CompositeByteBuf$Component.free(CompositeByteBuf.java:1915) ~[netty-buffer-4.1.44.Final.jar:4.1.44.Final]
	at io.netty.buffer.CompositeByteBuf.deallocate(CompositeByteBuf.java:2220) ~[netty-buffer-4.1.44.Final.jar:4.1.44.Final]
	at io.netty.buffer.AbstractReferenceCountedByteBuf.handleRelease(AbstractReferenceCountedByteBuf.java:110) ~[netty-buffer-4.1.44.Final.jar:4.1.44.Final]
	at io.netty.buffer.AbstractReferenceCountedByteBuf.release(AbstractReferenceCountedByteBuf.java:100) ~[netty-buffer-4.1.44.Final.jar:4.1.44.Final]
	at io.netty.util.ReferenceCountUtil.release(ReferenceCountUtil.java:88) ~[netty-common-4.1.44.Final.jar:4.1.44.Final]
	at io.netty.util.ReferenceCountUtil.safeRelease(ReferenceCountUtil.java:113) ~[netty-common-4.1.44.Final.jar:4.1.44.Final]
	at reactor.netty.ByteBufFlux.lambda$aggregate$9(ByteBufFlux.java:290) ~[reactor-netty-0.9.3.RELEASE.jar:0.9.3.RELEASE]
	at reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.runFinally(FluxDoFinally.java:156) [reactor-core-3.3.1.RELEASE.jar:3.3.1.RELEASE]
	at reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.cancel(FluxDoFinally.java:145) [reactor-core-3.3.1.RELEASE.jar:3.3.1.RELEASE]
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.cancel(FluxMap.java:286) [reactor-core-3.3.1.RELEASE.jar:3.3.1.RELEASE]
	at reactor.core.publisher.FluxHandle$HandleSubscriber.cancel(FluxHandle.java:259) [reactor-core-3.3.1.RELEASE.jar:3.3.1.RELEASE]
	at reactor.core.publisher.Operators.terminate(Operators.java:1108) [reactor-core-3.3.1.RELEASE.jar:3.3.1.RELEASE]
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.cancel(MonoFlatMap.java:180) [reactor-core-3.3.1.RELEASE.jar:3.3.1.RELEASE]
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.cancel(FluxOnAssembly.java:500) [reactor-core-3.3.1.RELEASE.jar:3.3.1.RELEASE]
	at reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.cancel(FluxDoFinally.java:144) [reactor-core-3.3.1.RELEASE.jar:3.3.1.RELEASE]
	at reactor.core.publisher.Operators.terminate(Operators.java:1108) [reactor-core-3.3.1.RELEASE.jar:3.3.1.RELEASE]
	at reactor.core.publisher.MonoFlatMap$FlatMapInner.cancel(MonoFlatMap.java:264) [reactor-core-3.3.1.RELEASE.jar:3.3.1.RELEASE]
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.cancel(MonoFlatMap.java:181) [reactor-core-3.3.1.RELEASE.jar:3.3.1.RELEASE]
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.cancel(FluxOnAssembly.java:500) [reactor-core-3.3.1.RELEASE.jar:3.3.1.RELEASE]
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.cancel(FluxOnAssembly.java:500) [reactor-core-3.3.1.RELEASE.jar:3.3.1.RELEASE]
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.cancel(FluxFilterFuseable.java:189) [reactor-core-3.3.1.RELEASE.jar:3.3.1.RELEASE]
	at reactor.core.publisher.Operators.terminate(Operators.java:1108) [reactor-core-3.3.1.RELEASE.jar:3.3.1.RELEASE]
	at reactor.core.publisher.FluxFlatMap$FlatMapInner.cancel(FluxFlatMap.java:1008) [reactor-core-3.3.1.RELEASE.jar:3.3.1.RELEASE]
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.unsubscribeEntry(FluxFlatMap.java:332) [reactor-core-3.3.1.RELEASE.jar:3.3.1.RELEASE]
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.unsubscribeEntry(FluxFlatMap.java:212) [reactor-core-3.3.1.RELEASE.jar:3.3.1.RELEASE]
	at reactor.core.publisher.FlatMapTracker.unsubscribe(FluxFlatMap.java:1068) [reactor-core-3.3.1.RELEASE.jar:3.3.1.RELEASE]
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.cancel(FluxFlatMap.java:352) [reactor-core-3.3.1.RELEASE.jar:3.3.1.RELEASE]
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.cancel(FluxOnAssembly.java:500) [reactor-core-3.3.1.RELEASE.jar:3.3.1.RELEASE]
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.drainLoop(Operators.java:2051) [reactor-core-3.3.1.RELEASE.jar:3.3.1.RELEASE]
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.drain(Operators.java:2020) [reactor-core-3.3.1.RELEASE.jar:3.3.1.RELEASE]
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.cancel(Operators.java:1832) [reactor-core-3.3.1.RELEASE.jar:3.3.1.RELEASE]
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.cancel(FluxFlatMap.java:351) [reactor-core-3.3.1.RELEASE.jar:3.3.1.RELEASE]
	at reactor.core.publisher.FluxTakeUntilOther$TakeUntilMainSubscriber.cancelMain(FluxTakeUntilOther.java:173) [reactor-core-3.3.1.RELEASE.jar:3.3.1.RELEASE]
	at reactor.core.publisher.FluxTakeUntilOther$TakeUntilMainSubscriber.cancel(FluxTakeUntilOther.java:190) [reactor-core-3.3.1.RELEASE.jar:3.3.1.RELEASE]
	at reactor.core.publisher.FluxTakeUntilOther$TakeUntilMainSubscriber.onComplete(FluxTakeUntilOther.java:234) [reactor-core-3.3.1.RELEASE.jar:3.3.1.RELEASE]
	at reactor.core.publisher.FluxTakeUntilOther$TakeUntilOtherSubscriber.onComplete(FluxTakeUntilOther.java:112) [reactor-core-3.3.1.RELEASE.jar:3.3.1.RELEASE]
	at reactor.core.publisher.FluxTakeUntilOther$TakeUntilOtherSubscriber.onNext(FluxTakeUntilOther.java:94) [reactor-core-3.3.1.RELEASE.jar:3.3.1.RELEASE]
	at reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:117) [reactor-core-3.3.1.RELEASE.jar:3.3.1.RELEASE]
	at reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68) [reactor-core-3.3.1.RELEASE.jar:3.3.1.RELEASE]
	at reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28) [reactor-core-3.3.1.RELEASE.jar:3.3.1.RELEASE]
	at java.util.concurrent.FutureTask.run(FutureTask.java:264) [?:?]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304) [?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) [?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) [?:?]
	at java.lang.Thread.run(Thread.java:830) [?:?]
23:08:26.459 [parallel-1] INFO  com.vlkan.pubsub.BenchmarkClient - [warm-up] pulled and ack'ed 1115800 messages in 30021 ms
23:08:26.459 [com.vlkan.pubsub.BenchmarkClient.main()] INFO  com.vlkan.pubsub.BenchmarkClient - [benchmark] started
23:08:28.880 [reactor-http-epoll-4] INFO  com.vlkan.pubsub.BenchmarkClient - [benchmark] pulled and ack'ed 100000 messages in 2419 ms
